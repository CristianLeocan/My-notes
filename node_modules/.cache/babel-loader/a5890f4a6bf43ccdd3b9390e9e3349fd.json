{"ast":null,"code":"var _jsxFileName = \"G:\\\\03 Projects React\\\\app_my_notes\\\\my_notes\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Sidebar from './components/Sidebar/Sidebar';\nimport Editor from './components/Editor/Editor';\nimport Split from 'react-split';\nimport { nanoid } from 'nanoid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [notes, setNotes] = React.useState(() => JSON.parse(localStorage.getItem(\"notes\")) || []);\n  const [currentNoteId, setCurrentNoteId] = React.useState(notes[0] && notes[0].id || \"\");\n  React.useEffect(() => {\n    localStorage.setItem(\"notes\", JSON.stringify(notes));\n  }, [notes]);\n\n  function createNewNote() {\n    const newNote = {\n      id: nanoid(),\n      body: \"# Type your markdown note's title here\"\n    };\n    setNotes(prevNotes => [newNote, ...prevNotes]);\n    setCurrentNoteId(newNote.id);\n  }\n\n  function updateNote(text) {\n    // Put the most recently-modified note at the top\n    setNotes(oldNotes => {\n      const newArray = [];\n\n      for (let i = 0; i < oldNotes.length; i++) {\n        const oldNote = oldNotes[i];\n\n        if (oldNote.id === currentNoteId) {\n          newArray.unshift({ ...oldNote,\n            body: text\n          });\n        } else {\n          newArray.push(oldNote);\n        }\n      }\n\n      return newArray;\n    });\n  }\n\n  function deleteNote(event, noteId) {\n    event.stopPropagation();\n    setNotes(oldNotes => oldNotes.filter(note => note.id !== noteId));\n  }\n\n  function findCurrentNote() {\n    return notes.find(note => {\n      return note.id === currentNoteId;\n    }) || notes[0];\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: notes.length > 0 ? /*#__PURE__*/_jsxDEV(Split, {\n      sizes: [30, 70],\n      direction: \"horizontal\",\n      className: \"split\",\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n        notes: notes,\n        currentNote: findCurrentNote(),\n        setCurrentNoteId: setCurrentNoteId,\n        newNote: createNewNote,\n        deleteNote: deleteNote\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 15\n      }, this), currentNoteId && notes.length > 0 && /*#__PURE__*/_jsxDEV(Editor, {\n        currentNote: findCurrentNote(),\n        updateNote: updateNote\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-notes\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"You have no notes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"first-note\",\n        onClick: createNewNote,\n        children: \"Create one now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 7\n  }, this);\n}\n\n_s(App, \"h9rVnagE36yNkFkROwCMD8XJBck=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Sidebar","Editor","Split","nanoid","App","notes","setNotes","JSON","parse","localStorage","getItem","currentNoteId","setCurrentNoteId","id","setItem","stringify","createNewNote","newNote","body","prevNotes","updateNote","text","oldNotes","newArray","i","length","oldNote","unshift","push","deleteNote","event","noteId","stopPropagation","filter","note","findCurrentNote","find"],"sources":["G:/03 Projects React/app_my_notes/my_notes/src/App.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\nimport Sidebar from './components/Sidebar/Sidebar';\nimport Editor from './components/Editor/Editor';\nimport Split from 'react-split';\nimport {nanoid} from 'nanoid';\n\nexport default function App() {\n  const [notes, setNotes] = React.useState(\n      () => JSON.parse(localStorage.getItem(\"notes\")) || []\n  )\n  const [currentNoteId, setCurrentNoteId] = React.useState(\n      (notes[0] && notes[0].id) || \"\"\n  )\n  \n  React.useEffect(() => {\n      localStorage.setItem(\"notes\", JSON.stringify(notes))\n  }, [notes])\n  \n  function createNewNote() {\n      const newNote = {\n          id: nanoid(),\n          body: \"# Type your markdown note's title here\"\n      }\n      setNotes(prevNotes => [newNote, ...prevNotes])\n      setCurrentNoteId(newNote.id)\n  }\n  \n  function updateNote(text) {\n      // Put the most recently-modified note at the top\n      setNotes(oldNotes => {\n          const newArray = []\n          for(let i = 0; i < oldNotes.length; i++) {\n              const oldNote = oldNotes[i]\n              if(oldNote.id === currentNoteId) {\n                  newArray.unshift({ ...oldNote, body: text })\n              } else {\n                  newArray.push(oldNote)\n              }\n          }\n          return newArray\n      })\n  } \n  \n  function deleteNote(event, noteId) {\n      event.stopPropagation()\n      setNotes(oldNotes => oldNotes.filter(note => note.id !== noteId))\n  }\n  \n  function findCurrentNote() {\n      return notes.find(note => {\n          return note.id === currentNoteId\n      }) || notes[0]\n  }\n  \n  return (\n      <main>\n      {\n          notes.length > 0 \n          ?\n          <Split \n              sizes={[30, 70]} \n              direction=\"horizontal\" \n              className=\"split\"\n          >\n              <Sidebar\n                  notes={notes}\n                  currentNote={findCurrentNote()}\n                  setCurrentNoteId={setCurrentNoteId}\n                  newNote={createNewNote}\n                  deleteNote={deleteNote}\n              />\n              {\n                  currentNoteId && \n                  notes.length > 0 &&\n                  <Editor \n                      currentNote={findCurrentNote()} \n                      updateNote={updateNote} \n                  />\n              }\n          </Split>\n          :\n          <div className=\"no-notes\">\n              <h1>You have no notes</h1>\n              <button \n                  className=\"first-note\" \n                  onClick={createNewNote}\n              >\n                  Create one now\n              </button>\n          </div>\n          \n      }\n      </main>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}